<application>
  <component name="AppStorage">
    <option name="newTranslationDialogCollapseDictViewer" value="false" />
    <option name="newTranslationDialogWidth" value="706" />
    <option name="newTranslationDialogX" value="1105" />
    <option name="newTranslationDialogY" value="844" />
    <histories>
      <item value="Broadcast Action: A new version of your application has been installed over an existing one. This is only sent to the application that was replaced. It does not contain any additional data; to receive it, just use an intent filter for this action. &lt;p class=&quot;note&quot;&gt;This is a protected intent that can only be sent by the system." />
      <item value="BROADCAST INTENT ACTION" />
      <item value="ACTION PACKAGE REMOVED" />
      <item value="SYSTEM HIGH PRIORITY" />
      <item value="USER PRESENT" />
      <item value="BOOT COMPLETED" />
      <item value="requests" />
      <item value="SERVICE INTENT EXTRA" />
      <item value="Scoped Storage" />
      <item value="Unused Attribute" />
      <item value="set Placeholder" />
      <item value="deferred" />
      <item value="The global {@link Picasso} instance. &lt;p&gt; This instance is automatically initialized with defaults that are suitable to most implementations. &lt;ul&gt; &lt;li&gt;LRU memory cache of 15% the available application RAM&lt;li&gt; &lt;li&gt;Disk cache of 2% storage space up to 50MB but no less than 5MB. (Note: this is only available on API 14+ &lt;em&gt;or&lt;em&gt; if you are using a standalone library that provides a disk cache on all API levels like OkHttp)&lt;li&gt; &lt;li&gt;Three download threads for disk and network access.&lt;li&gt; &lt;ul&gt; &lt;p&gt; If these settings do not meet the requirements of your application you can construct your own with full control over the configuration by using {@link Picasso.Builder} to create a {@link Picasso} instance. You can either use this directly or by setting it as the global instance with {@link setSingletonInstance}." />
      <item value="Listener Host" />
      <item value="await Termination" />
      <item value="new Cached Thread Pool" />
      <item value="priority" />
      <item value="subscriber" />
      <item value="Subscriber priority to influence the order of event delivery." />
      <item value="If true, delivers the most recent sticky event (posted with" />
      <item value="POSTING" />
      <item value="BACKGROUND" />
      <item value="MAIN ORDERED" />
      <item value="Observer" />
      <item value="Error Dialog Manager" />
      <item value="MAXIMUM POOL SIZE" />
      <item value="Async" />
      <item value="asynch" />
      <item value="异步" />
      <item value="asyn" />
      <item value="Commen" />
      <item value="invalid" />
      <item value="unionpay" />
      <item value="api" />
      <item value="Dex Archive Builder Exception" />
      <item value="Compilation Failed Exception" />
      <item value="match" />
      <item value="Inherited" />
      <item value="classpath 'com.bitAuto.plugin:full_point:1.0.3-alpha'" />
      <item value="SKIP FRAMES" />
      <item value="check XML On Click" />
      <item value="Returns the parallelism of this executor i.e. how many tasks can run in parallel." />
      <item value="get Parallelism" />
      <item value="Returns the common pool instance. This pool is statically constructed; its run state is unaffected by attempts to {@link shutdown} or {@link shutdownNow}. However this pool and any ongoing processing are automatically terminated upon program {@link Systemexit}. Any program that relies on asynchronous task processing to complete before program termination should invoke {@code commonPool().}{@link awaitQuiescence awaitQuiescence}, before exit." />
      <item value="get Security Manager" />
      <item value="default Fork Join Worker Thread Factory" />
      <item value="Rejected Execution Exception" />
      <item value="use Global Shared Thread Pool" />
      <item value="Fail" />
      <item value="Waits for all tasks to be executed. If a tasks throws an exception, it will be thrown from this method inside a RuntimeException, preventing access to the result of the other threads. &lt;p&gt;If you want to get the results of all tasks (result andor exception), use {@link waitForAllTasks()} &lt;p&gt;To get the actual cause of the failure, examine the exception thrown. There are some nuances to it though. If the exception was thrown on the same thread on which we wait for completion, the {@link ThrowablegetCause()} will be {@code null}. If the exception was thrown on a different thread, the fork join pool mechanism will try to set the cause. Because there is no access to this information, you probably want to check for the cause first, and only if it is null, to check the exception thrown by this method." />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="583" />
        <entry key="ENGLISH" value="575" />
        <entry key="POLISH" value="2" />
        <entry key="DANISH" value="1" />
        <entry key="GERMAN" value="1" />
        <entry key="FILIPINO" value="2" />
        <entry key="CZECH" value="1" />
        <entry key="LUXEMBOURGISH" value="1" />
        <entry key="ROMANIAN" value="1" />
        <entry key="NORWEGIAN" value="2" />
        <entry key="SLOVENIAN" value="1" />
        <entry key="SWAHILI" value="1" />
        <entry key="TURKISH" value="1" />
        <entry key="SPANISH" value="1" />
        <entry key="ITALIAN" value="1" />
        <entry key="HINDI" value="1" />
        <entry key="INDONESIAN" value="3" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1615793862849" />
  </component>
  <component name="Settings">
    <option name="googleTranslateSettings">
      <google-translate>
        <option name="useTranslateGoogleCom" value="true" />
      </google-translate>
    </option>
    <option name="translator" value="YOUDAO" />
    <option name="youdaoTranslateSettings">
      <youdao-translate>
        <option name="appId" value="7a4dd746f1c5fe26" />
      </youdao-translate>
    </option>
  </component>
</application>